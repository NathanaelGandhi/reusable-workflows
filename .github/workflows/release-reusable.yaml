name: 'Release'

on:
  workflow_call:
    inputs:
      merge-type:
        required: true
        type: string

jobs:
  release-conventional-changelog:
    runs-on: ubuntu-latest
    steps:
      # check out the repository with all releases
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # create and switch to a temporary, uniquely named branch to push release info to
      - name: create temporary branch
        run: git checkout -b "release-from-${{ github.sha }}" "${{ github.sha }}"
      # create release info and push it upstream
      - name: conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          git-branch: "release-from-${{ github.sha }}"
          skip-on-empty: true
          skip-git-pull: true
          version-file: "./VERSION.yaml"
      # create PR using GitHub CLI
      - name: create PR with release info
        if: steps.changelog.outputs.skipped == 'false'
        id: create-pr
        run: gh pr create --base main --head release-from-${{ github.sha }} --title format('chore(changelog){0} ${{ steps.changelog.outputs.tag }} release', ':') --body "Created by Github action in release workflow"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # merge PR using GitHub CLI
      - name: merge PR with release info
        if: steps.changelog.outputs.skipped == 'false'
        id: merge-pr
        run: gh pr merge --admin  ${{ inputs.merge-type }} --subject format('chore(changelog){0} ${{ steps.changelog.outputs.tag }} release [skip ci]', ':') --delete-branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # release info is now in main so we can continue
      - name: create release with changelog commit
        if: steps.changelog.outputs.skipped == 'false'
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.changelog.outputs.tag }}
          name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
